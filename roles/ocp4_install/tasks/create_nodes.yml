- name: Download the ova file 
    get_url:
      url: "{{ ova_url }}"
      dest: "{{ install_dir }}/{{ rhcos_ova }}"
      validate_certs: no
    when: skip_ova is not defined

- name: Deploy the OVF template into the folder
  vmware_deploy_ovf:
    hostname: "{{ vcenter.ip }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_passwd }}"
    datacenter: "{{ datacenter }}"
    datastore: "{{ datastore }}"
    folder: "{{ folder }}"
    name: '{{ template_name }}'
    allow_duplicates: False
    disk_provisioning: thin
    networks: "{u'VM Network':u'{{ vcenter_network }}'}"
    ova: "{{ playbook_dir }}/downloads/{{ template_name }}.ova"
    power_on: False
    validate_certs: False
  when: skip_ova is not defined
  
- name: Remove the Network Adapter  
  command: "govc device.remove -vm {{ folder }}/{{ template_name }} ethernet-0"
  when: skip_ova is not defined

- name: Update VM options on the template
  command: "govc vm.change -vm {{ folder }}/{{ template_name }} -latency high -e=disk.EnableUUID=TRUE -e=guestinfo.ignition.config.data.encoding=base64 -e=guestinfo.ignition.config.data=blah"
  when: skip_ova is not defined      

- name: "Bootstrap base64"
  debug:
    msg: "{{ appendBootstrapContent }}"
    verbosity: 1
- name: "Master base64"
  debug:
    msg: "{{ masterContent }}"
    verbosity: 1
- name: "Worker base64 "
  debug:
    msg: "{{ workerContent }}"
    verbosity: 1

- name: Create bootstrap VM from the template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_passwd }}"
    datacenter: "{{ datacenter }}"
    validate_certs: no
    folder: "{{ folder }}"
    name: "{{ item.name }}"
    state: "{{ vm_power_state }}"
    template: "{{ template_name }}"
    disk:
    - size_gb: 120
      type: thin
      datastore: "{{ datastore }}"
    hardware:
      memory_mb: 16384
      num_cpus: 4
      memory_reservation_lock: True
    networks:
    - name: "{{ vcenter_network }}"
      mac: "{{ item.macaddr }}"
    wait_for_ip_address: no
    customvalues:
      - key: guestinfo.ignition.config.data
        value: "{{ appendBootstrapContent }}"
  loop: "{{ bootstrap_vms }}"

- name: Create master VMs from ther template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_passwd }}"
    datacenter: "{{ datacenter }}"
    validate_certs: no
    folder: "{{ folder }}"
    name: "{{ item.name }}"
    state: "{{ vm_power_state }}"
    template: "{{ template_name }}"
    disk:
    - size_gb: 120
      type: thin
      datastore: "{{ datastore }}"
    hardware:
      memory_mb: 16384
      num_cpus: 4
      memory_reservation_lock: True
    networks:
    - name: "{{ vcenter.network }}"
      mac: "{{ item.macaddr }}"
    wait_for_ip_address: no
    customvalues:
     - key: guestinfo.ignition.config.data
       value: "{{ masterContent }}"
  loop: "{{ master_vms }}"

- name: Create worker VMs from the template
  vmware_guest:
    hostname: "{{ vcenter.ip }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_passwd }}"
    datacenter: "{{ datacenter }}"
    validate_certs: no
    folder: "{{ folder }}"
    name: "{{ item.name }}"
    state: "{{ vm_power_state }}"
    template: "{{ template_name }}"
    disk:
    - size_gb: 120
      type: thin
      datastore: "{{ datastore }}"
    hardware:
      memory_mb: 16384
      num_cpus: 4
      memory_reservation_lock: True
    networks:
    - name: "{{ vcenter_network }}"
      mac: "{{ item.macaddr }}"
    wait_for_ip_address: no
    customvalues:
     - key: guestinfo.ignition.config.data
       value: "{{ workerContent }}"
  loop: "{{ worker_vms }}"
