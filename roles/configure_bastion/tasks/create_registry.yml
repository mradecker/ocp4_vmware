---

- name: Create folders for the registry
  become: yes
  file:
    path: '{{ registry_dir }}/{{ item }}'
    state: directory
    owner: "{{ owner }}"
    group: "{{ group }}"
    recurse: yes
  loop:
  - certs
  - auth
  - data

- name: Create self-signed cert if necessary
  import_role:
    name: self_signed_cert
  when: self_signed_cert | bool

- name: Generate htpasswd file
  shell: 'htpasswd -bBc {{ auth_dir }}/htpasswd openshift redhat'
  args:
    creates: '{{ auth_dir }}/htpasswd'

- name: Create mirror-registry
  shell: 'podman run -d \
--name mirror-registry \
-p 5000:5000 \
--restart=always \
-v {{ registry_dir }}/data:/var/lib/registry:z \
-v {{ registry_dir }}/auth:/auth:z \
-e "REGISTRY_AUTH=htpasswd" \
-e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" \
-e "REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd" \
-v {{ registry_dir }}/certs:/certs:z \
-e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/{{ registry_name }}.crt \
-e REGISTRY_HTTP_TLS_KEY=/certs/{{ registry_name }}.key \
docker.io/library/registry:2'
  register: container_result
  failed_when: "container_result.rc != 0 and 'already in use' not in container_result.stderr"

- name: Start mirror-registry if running the playbook again
  shell: 'podman start mirror-registry'
  when: "'already in use' in container_result.stderr"

- name: Change owner of certificates
  file:
    path: '{{ registry_dir }}/certs'
    recurse: yes
    owner: "{{ owner }}"

- name: Add registry certificate to trusted certificates
  become: yes
  copy:
    src: '{{ registry_dir }}/certs/{{ registry_name }}.crt'
    dest: '/etc/pki/ca-trust/source/anchors/'
    remote_src: yes

- name: Update CA trust
  shell: 'sudo update-ca-trust'

